Command: ninja all
[1/7] Performing build step for 'bootloader'
[1/1] cd /root/leak_detector_liquid_level_ws/leak_detector/build/bootloader && /root/.espressif/python_env/idf6.0_py3.10_env/bin/python /root/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /root/leak_detector_liquid_level_ws/leak_detector/build/bootloader/bootloader.bin
Bootloader binary size 0x6690 bytes. 0x970 bytes (8%) free.
[2/5] Generating esp-idf/esp_system/ld/sections.ld
info: Default value for BT_ENABLED in sdkconfig is y but it is n according to Kconfig.
Using default value from sdkconfig (y).
info: Default value for ESP_COEX_SW_COEXIST_ENABLE in sdkconfig is y but it is n according to Kconfig.
Using default value from sdkconfig (y).
[3/5] Linking CXX executable leak_detector.elf
[4/5] Generating binary image from built executable
esptool.py v4.10.dev2
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /root/leak_detector_liquid_level_ws/leak_detector/build/leak_detector.bin
[5/5] cd /root/leak_detector_liquid_level_ws/leak_detector/build && /root/.espressif/python_env/idf6.0_py3.10_env/bin/python /root/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /root/leak_detector_liquid_level_ws/leak_detector/build/partition_table/partition-table.bin /root/leak_detector_liquid_level_ws/leak_detector/build/leak_detector.bin
leak_detector.bin binary size 0x2f340 bytes. Smallest app partition is 0x100000 bytes. 0xd0cc0 bytes (82%) free.
